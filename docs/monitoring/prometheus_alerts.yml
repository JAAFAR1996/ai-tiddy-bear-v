# Prometheus Alerting Rules for AI Teddy Bear Conversation Service
# These rules define alerts for critical service conditions

groups:
  - name: conversation_service_alerts
    rules:
      # Service Health Alerts
      - alert: ConversationServiceDown
        expr: conversation_service_health_status == 0
        for: 30s
        labels:
          severity: critical
          service: conversation_service
          team: backend
        annotations:
          summary: "Conversation Service is down"
          description: "The Conversation Service health check has failed for more than 30 seconds"
          runbook_url: "https://docs.example.com/runbooks/conversation-service-down"

      # Performance Alerts
      - alert: HighConversationLatency
        expr: histogram_quantile(0.95, rate(conversation_service_duration_seconds_bucket[5m])) > 2
        for: 2m
        labels:
          severity: warning
          service: conversation_service
          team: backend
        annotations:
          summary: "High conversation latency detected"
          description: "95th percentile conversation duration is {{ $value }}s, above 2s threshold"
          runbook_url: "https://docs.example.com/runbooks/high-latency"

      # Error Rate Alerts
      - alert: HighErrorRate
        expr: (rate(conversation_service_errors_total[5m]) / rate(conversation_service_operations_total[5m])) * 100 > 5
        for: 2m
        labels:
          severity: warning
          service: conversation_service
          team: backend
        annotations:
          summary: "High error rate in conversation service"
          description: "Error rate is {{ $value }}%, above 5% threshold"
          runbook_url: "https://docs.example.com/runbooks/high-error-rate"

      - alert: CriticalErrorRate
        expr: (rate(conversation_service_errors_total[5m]) / rate(conversation_service_operations_total[5m])) * 100 > 15
        for: 1m
        labels:
          severity: critical
          service: conversation_service
          team: backend
        annotations:
          summary: "Critical error rate in conversation service"
          description: "Error rate is {{ $value }}%, above 15% critical threshold"
          runbook_url: "https://docs.example.com/runbooks/critical-error-rate"

      # Child Safety Alerts
      - alert: SafetyIncidentsSpike
        expr: rate(conversation_service_safety_incidents_total[5m]) > 0.1
        for: 1m
        labels:
          severity: critical
          service: conversation_service
          team: safety
          urgent: "true"
        annotations:
          summary: "Safety incidents spike detected"
          description: "Safety incidents rate is {{ $value }}/sec, indicating potential safety issues"
          runbook_url: "https://docs.example.com/runbooks/safety-incidents"

      - alert: CriticalSafetyIncident
        expr: increase(conversation_service_safety_incidents_total{severity="critical"}[1m]) > 0
        for: 0s
        labels:
          severity: critical
          service: conversation_service
          team: safety
          urgent: "true"
          pager: "true"
        annotations:
          summary: "Critical safety incident detected"
          description: "A critical safety incident has been detected in the conversation service"
          runbook_url: "https://docs.example.com/runbooks/critical-safety-incident"

      # Resource Usage Alerts
      - alert: HighMemoryUsage
        expr: conversation_service_memory_usage_bytes / (1024 * 1024 * 1024) > 2
        for: 5m
        labels:
          severity: warning
          service: conversation_service
          team: infrastructure
        annotations:
          summary: "High memory usage in conversation service"
          description: "Memory usage is {{ $value }}GB, above 2GB threshold"
          runbook_url: "https://docs.example.com/runbooks/high-memory-usage"

      # Database Alerts
      - alert: DatabaseConnectionIssues
        expr: conversation_service_dependency_health{dependency="database"} == 0
        for: 30s
        labels:
          severity: critical
          service: conversation_service
          team: infrastructure
        annotations:
          summary: "Database connection issues"
          description: "Conversation service cannot connect to the database"
          runbook_url: "https://docs.example.com/runbooks/database-connection-issues"

      - alert: SlowDatabaseQueries
        expr: histogram_quantile(0.95, rate(conversation_service_database_operation_duration_seconds_bucket[5m])) > 1
        for: 3m
        labels:
          severity: warning
          service: conversation_service
          team: infrastructure
        annotations:
          summary: "Slow database queries detected"
          description: "95th percentile database query duration is {{ $value }}s, above 1s threshold"
          runbook_url: "https://docs.example.com/runbooks/slow-database-queries"

      # Cache Alerts
      - alert: LowCacheHitRate
        expr: (rate(conversation_service_cache_operations_total{hit_miss="hit"}[5m]) / rate(conversation_service_cache_operations_total[5m])) * 100 < 70
        for: 5m
        labels:
          severity: warning
          service: conversation_service
          team: backend
        annotations:
          summary: "Low cache hit rate"
          description: "Cache hit rate is {{ $value }}%, below 70% threshold"
          runbook_url: "https://docs.example.com/runbooks/low-cache-hit-rate"

      - alert: RedisConnectionDown
        expr: conversation_service_dependency_health{dependency="redis"} == 0
        for: 1m
        labels:
          severity: warning
          service: conversation_service
          team: infrastructure
        annotations:
          summary: "Redis connection down"
          description: "Conversation service cannot connect to Redis cache"
          runbook_url: "https://docs.example.com/runbooks/redis-connection-down"

      # Business Logic Alerts
      - alert: UnusuallyHighActiveConversations
        expr: conversation_service_active_conversations > 200
        for: 5m
        labels:
          severity: warning
          service: conversation_service
          team: backend
        annotations:
          summary: "Unusually high number of active conversations"
          description: "Active conversations count is {{ $value }}, above normal threshold of 200"
          runbook_url: "https://docs.example.com/runbooks/high-active-conversations"

      - alert: NoConversationActivity
        expr: rate(conversation_service_operations_total[10m]) == 0
        for: 5m
        labels:
          severity: warning
          service: conversation_service
          team: backend
        annotations:
          summary: "No conversation activity detected"
          description: "No conversation operations detected in the last 10 minutes"
          runbook_url: "https://docs.example.com/runbooks/no-activity"

      # COPPA Compliance Alerts
      - alert: DataRetentionViolation
        expr: increase(conversation_service_coppa_violations_total[1m]) > 0
        for: 0s
        labels:
          severity: critical
          service: conversation_service
          team: compliance
          urgent: "true"
          pager: "true"
        annotations:
          summary: "COPPA data retention violation detected"
          description: "A COPPA compliance violation has been detected"
          runbook_url: "https://docs.example.com/runbooks/coppa-violation"

      # Rate Limiting Alerts
      - alert: HighRateLimitingActivity
        expr: rate(conversation_service_rate_limit_exceeded_total[5m]) > 1
        for: 2m
        labels:
          severity: warning
          service: conversation_service
          team: backend
        annotations:
          summary: "High rate limiting activity"
          description: "Rate limiting is being triggered frequently: {{ $value }}/sec"
          runbook_url: "https://docs.example.com/runbooks/high-rate-limiting"

  - name: conversation_service_deadlocks
    rules:
      # Deadlock Detection
      - alert: ConversationDeadlockDetected
        expr: conversation_service_active_locks > 50
        for: 2m
        labels:
          severity: critical
          service: conversation_service
          team: backend
        annotations:
          summary: "Potential deadlock in conversation service"
          description: "High number of active locks detected: {{ $value }}"
          runbook_url: "https://docs.example.com/runbooks/deadlock-detection"

  - name: conversation_service_capacity
    rules:
      # Capacity Planning Alerts
      - alert: ApproachingCapacityLimit
        expr: conversation_service_active_conversations > 150
        for: 10m
        labels:
          severity: info
          service: conversation_service
          team: capacity_planning
        annotations:
          summary: "Approaching conversation capacity limit"
          description: "Active conversations ({{ $value }}) approaching capacity limit of 200"
          runbook_url: "https://docs.example.com/runbooks/capacity-planning"

      - alert: CapacityLimitReached
        expr: conversation_service_active_conversations >= 200
        for: 2m
        labels:
          severity: warning
          service: conversation_service
          team: capacity_planning
        annotations:
          summary: "Conversation capacity limit reached"
          description: "Active conversations ({{ $value }}) at or above capacity limit"
          runbook_url: "https://docs.example.com/runbooks/capacity-limit-reached"
