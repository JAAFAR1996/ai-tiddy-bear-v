# AI Teddy Bear Production NGINX Configuration
# Optimized for HTTPS, Security, Child Safety, and COPPA Compliance

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

# Worker configuration for production
worker_rlimit_nofile 65535;

events {
    worker_connections 4096;
    use epoll;
    multi_accept on;
}

http {
    # Basic settings
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Logging format with security info
    log_format main_secure '$remote_addr - $remote_user [$time_local] "$request" '
                          '$status $body_bytes_sent "$http_referer" '
                          '"$http_user_agent" "$http_x_forwarded_for" '
                          'rt=$request_time uct="$upstream_cache_status" '
                          'ucs="$upstream_cache_status" urt="$upstream_response_time"';
    
    access_log /var/log/nginx/access.log main_secure;
    
    # Performance optimizations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 10M;  # For audio uploads
    client_body_buffer_size 128k;
    client_header_buffer_size 3m;
    large_client_header_buffers 4 256k;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    
    # Security headers (Global)
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self'; connect-src 'self' https:; media-src 'self'; object-src 'none'; child-src 'none'; worker-src 'none'; frame-ancestors 'none'; form-action 'self'; base-uri 'self';" always;
    
    # COPPA compliance header
    add_header X-COPPA-Compliant "true" always;
    add_header X-Child-Safe "true" always;
    
    # Rate limiting zones
    limit_req_zone $binary_remote_addr zone=login:10m rate=5r/m;
    limit_req_zone $binary_remote_addr zone=api:10m rate=30r/m;
    limit_req_zone $binary_remote_addr zone=general:10m rate=60r/m;
    limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m;
    
    # Upstream backend
    upstream ai_teddy_backend {
        server app:8000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }
    
    # HTTP server - redirect to HTTPS
    server {
        listen 80;
        server_name aiteddybear.com www.aiteddybear.com api.aiteddybear.com app.aiteddybear.com;
        
        # Let's Encrypt challenge location
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
            try_files $uri =404;
        }
        
        # Redirect all other requests to HTTPS
        location / {
            return 301 https://$host$request_uri;
        }
    }
    
    # HTTPS server - Main API
    server {
        listen 443 ssl http2;
        server_name api.aiteddybear.com;
        
        # SSL configuration
        ssl_certificate /etc/nginx/ssl/live/aiteddybear.com/fullchain.pem;
        ssl_certificate_key /etc/nginx/ssl/live/aiteddybear.com/privkey.pem;
        
        # SSL settings
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_timeout 10m;
        ssl_session_cache shared:SSL:10m;
        ssl_session_tickets off;
        ssl_stapling on;
        ssl_stapling_verify on;
        
        # HSTS - Enhanced for Production (2 years)
        add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
        
        # Connection limits
        limit_conn conn_limit_per_ip 20;
        
        # API endpoints
        location /api/ {
            # Rate limiting for API
            limit_req zone=api burst=10 nodelay;
            
            # Proxy configuration
            proxy_pass http://ai_teddy_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Port $server_port;
            proxy_cache_bypass $http_upgrade;
            
            # Timeouts
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # Headers for child safety
            proxy_set_header X-Child-Safe-Request "true";
            proxy_set_header X-COPPA-Compliant "true";
        }
        
        # Authentication endpoints - stricter limits
        location ~ ^/api/v1/(auth|login|register) {
            limit_req zone=login burst=3 nodelay;
            
            proxy_pass http://ai_teddy_backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Extra security for auth
            proxy_set_header X-Auth-Request "true";
            proxy_set_header X-COPPA-Compliant "true";
        }
        
        # WebSocket support for real-time features
        location /ws/ {
            proxy_pass http://ai_teddy_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket timeouts
            proxy_read_timeout 86400;
            proxy_send_timeout 86400;
            
            # Child safety for WebSocket
            proxy_set_header X-Child-Safe-WebSocket "true";
        }
        
        # Health check endpoint
        location /health {
            proxy_pass http://ai_teddy_backend;
            access_log off;
        }
        
        # Block access to sensitive paths
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        location ~ /(config|logs|backups|admin) {
            deny all;
            return 404;
        }
    }
    
    # HTTPS server - App domain (if needed)
    server {
        listen 443 ssl http2;
        server_name app.aiteddybear.com;
        
        # SSL configuration (same as API)
        ssl_certificate /etc/nginx/ssl/live/aiteddybear.com/fullchain.pem;
        ssl_certificate_key /etc/nginx/ssl/live/aiteddybear.com/privkey.pem;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers off;
        
        # HSTS - Enhanced for Production (2 years)
        add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
        
        # Redirect to main API or serve static content
        location / {
            return 301 https://api.aiteddybear.com$request_uri;
        }
    }
    
    # HTTPS server - Main domain redirect
    server {
        listen 443 ssl http2;
        server_name aiteddybear.com www.aiteddybear.com;
        
        # SSL configuration (same as API)
        ssl_certificate /etc/nginx/ssl/live/aiteddybear.com/fullchain.pem;
        ssl_certificate_key /etc/nginx/ssl/live/aiteddybear.com/privkey.pem;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers off;
        
        # HSTS - Enhanced for Production (2 years)
        add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
        
        # Redirect to API subdomain
        location / {
            return 301 https://api.aiteddybear.com$request_uri;
        }
    }
    
    # Hide nginx version
    server_tokens off;
}