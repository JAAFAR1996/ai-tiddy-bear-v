apiVersion: v1
kind: Service
metadata:
  name: ai-teddy-bear-service
  namespace: ai-teddy-bear
  labels:
    app.kubernetes.io/name: ai-teddy-bear
    app.kubernetes.io/instance: production
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/component: service
    app.kubernetes.io/part-of: ai-teddy-bear
    app.kubernetes.io/managed-by: kubernetes
    # Child safety compliance
    coppa.compliant: "true"
    child.safety.validated: "true"
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
    service.beta.kubernetes.io/aws-load-balancer-connection-draining-enabled: "true"
    service.beta.kubernetes.io/aws-load-balancer-connection-draining-timeout: "60"
    # Child safety annotations
    child-safety.compliance/coppa: "enabled"
    child-safety.monitoring/enabled: "true"
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 80
    targetPort: http
    protocol: TCP
  - name: metrics
    port: 9090
    targetPort: metrics
    protocol: TCP
  selector:
    app.kubernetes.io/name: ai-teddy-bear
    app.kubernetes.io/component: backend
    deployment.color: blue  # Points to blue deployment initially
  sessionAffinity: None
---
# Blue service for blue-green deployments
apiVersion: v1
kind: Service
metadata:
  name: ai-teddy-bear-blue
  namespace: ai-teddy-bear
  labels:
    app.kubernetes.io/name: ai-teddy-bear
    app.kubernetes.io/component: service
    deployment.color: blue
    coppa.compliant: "true"
    child.safety.validated: "true"
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 80
    targetPort: http
    protocol: TCP
  - name: metrics
    port: 9090
    targetPort: metrics
    protocol: TCP
  selector:
    app.kubernetes.io/name: ai-teddy-bear
    app.kubernetes.io/component: backend
    deployment.color: blue
---
# Green service for blue-green deployments
apiVersion: v1
kind: Service
metadata:
  name: ai-teddy-bear-green
  namespace: ai-teddy-bear
  labels:
    app.kubernetes.io/name: ai-teddy-bear
    app.kubernetes.io/component: service
    deployment.color: green
    coppa.compliant: "true"
    child.safety.validated: "true"
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 80
    targetPort: http
    protocol: TCP
  - name: metrics
    port: 9090
    targetPort: metrics
    protocol: TCP
  selector:
    app.kubernetes.io/name: ai-teddy-bear
    app.kubernetes.io/component: backend
    deployment.color: green
---
# LoadBalancer service for external access
apiVersion: v1
kind: Service
metadata:
  name: ai-teddy-bear-lb
  namespace: ai-teddy-bear
  labels:
    app.kubernetes.io/name: ai-teddy-bear
    app.kubernetes.io/component: loadbalancer
    coppa.compliant: "true"
    child.safety.validated: "true"
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    service.beta.kubernetes.io/aws-load-balancer-scheme: "internet-facing"
    service.beta.kubernetes.io/aws-load-balancer-ssl-cert: "arn:aws:acm:us-west-2:ACCOUNT:certificate/CERT-ID"
    service.beta.kubernetes.io/aws-load-balancer-ssl-ports: "https"
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: "http"
    service.beta.kubernetes.io/aws-load-balancer-connection-draining-enabled: "true"
    service.beta.kubernetes.io/aws-load-balancer-connection-draining-timeout: "60"
    service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
    service.beta.kubernetes.io/aws-load-balancer-additional-resource-tags: "Environment=production,Application=ai-teddy-bear,COPPA=compliant"
    # Health check configuration
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-healthy-threshold: "2"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-interval: "10"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-path: "/health"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-port: "80"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-protocol: "HTTP"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-timeout: "5"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-unhealthy-threshold: "2"
spec:
  type: LoadBalancer
  ports:
  - name: https
    port: 443
    targetPort: http
    protocol: TCP
  - name: http
    port: 80
    targetPort: http
    protocol: TCP
  selector:
    app.kubernetes.io/name: ai-teddy-bear
    app.kubernetes.io/component: backend
    deployment.color: blue  # Points to active deployment
  loadBalancerSourceRanges:
  - 0.0.0.0/0  # Consider restricting this in production
---
# Headless service for StatefulSet services (if needed)
apiVersion: v1
kind: Service
metadata:
  name: ai-teddy-bear-headless
  namespace: ai-teddy-bear
  labels:
    app.kubernetes.io/name: ai-teddy-bear
    app.kubernetes.io/component: headless-service
    coppa.compliant: "true"
    child.safety.validated: "true"
spec:
  clusterIP: None
  ports:
  - name: http
    port: 80
    targetPort: http
    protocol: TCP
  selector:
    app.kubernetes.io/name: ai-teddy-bear
    app.kubernetes.io/component: backend
