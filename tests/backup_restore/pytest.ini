[tool:pytest]
# Pytest configuration for backup/restore testing

# Test discovery
testpaths = tests/backup_restore
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Markers for test categorization
markers =
    critical: Critical tests that block production deployment
    child_safety: Tests specifically validating child safety
    coppa_compliance: Tests validating COPPA compliance
    performance: Performance validation tests
    mutation: Mutation testing scenarios
    e2e: End-to-end integration tests
    chaos: Chaos engineering tests
    slow: Tests that take longer than 30 seconds
    requires_database: Tests that require database connection
    requires_storage: Tests that require file storage
    requires_network: Tests that require network connectivity

# Test execution configuration
addopts = 
    -v
    --strict-markers
    --tb=short
    --asyncio-mode=auto
    --disable-warnings
    --color=yes
    --durations=10
    --maxfail=5

# Asyncio configuration
asyncio_mode = auto

# Timeout configuration (in seconds)
timeout = 1800  # 30 minutes max per test

# Coverage configuration
addopts = --cov=src/infrastructure/backup --cov=src/application/services --cov-report=html --cov-report=term-missing --cov-fail-under=85

# Child safety specific configuration
child_safety_required_coverage = 100
coppa_compliance_required_coverage = 100
safety_critical_modules = [
    "src.application.services.child_safety_service",
    "src.infrastructure.backup.database_backup",
    "src.infrastructure.backup.restore_service",
    "src.utils.validation_utils",
    "src.utils.crypto_utils"
]

# Test data configuration
test_data_dir = tests/backup_restore/test_data
temp_backup_dir = /tmp/backup_restore_tests
log_level = INFO

# Performance thresholds
max_backup_duration_seconds = 300
max_restore_duration_seconds = 600
max_child_interaction_delay_ms = 200
rto_target_minutes = 30
rpo_target_minutes = 5

# Quality gates
minimum_child_safety_score = 0.95
minimum_coppa_compliance_score = 1.0
minimum_production_readiness_score = 0.90
minimum_mutation_score = 0.90
minimum_safety_critical_mutation_score = 0.95

# Environment specific settings
[tool:pytest.env:test]
database_url = sqlite:///test_backup_restore.db
redis_url = redis://localhost:6379/15
log_level = DEBUG
enable_chaos_testing = true

[tool:pytest.env:staging]
database_url = postgresql://test_user:test_pass@localhost/test_backup_db
redis_url = redis://localhost:6379/14
log_level = INFO
enable_chaos_testing = true

[tool:pytest.env:production]
# Production environment should never run destructive tests
enable_chaos_testing = false
log_level = WARNING
read_only_mode = true